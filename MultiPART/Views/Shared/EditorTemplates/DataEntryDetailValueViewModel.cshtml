@using MultiPART.Models.ViewModel.DataEntryViewModels
@using MultiPART.Utilities
@model DataEntryDetailValueViewModel

<tr>
    @{
        var prefixArray = ViewData.TemplateInfo.HtmlFieldPrefix.Split('.');
        var prefix = prefixArray[0];
    }
    @using (Html.BeginCollectionItem(prefix + ".DataEntryDetails"))
    {
        @Html.HiddenFor(m => m.DataEntryDataEntryID)
        @Html.HiddenFor(m => m.DesignID)
        @Html.HiddenFor(m => m.DataEntryDetailID)
        @Html.Hidden("ModelType", Model.GetType())

        <td class="col-md-2 form-group">
            <div>
                @Html.TextBoxFor(model => model.StartTime, new { @class = "form-control datetimepicker" })
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>
        </td>
        <td class="col-md-2 form-group">
            <div>
                @Html.TextBoxFor(model => model.EndTime, new { @class = "form-control datetimepicker" })
                @Html.ValidationMessageFor(model => model.EndTime)
            </div>
        </td>
        <td class="col-md-3 form-group">
            <div>
                @Html.TextBoxFor(model => model.Value, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Value)

            </div>
        </td>
        <td class="col-md-3"></td>
        <td class="col-md-2">
            <button class="btn btn-default btn-danger" href="#" onclick="$(this).parents().eq(1).remove(); viewModel.checkAdd(@Model.DesignID);">
                <i class="fa fa-trash"></i>
            </button>
        </td>

    }
</tr>
